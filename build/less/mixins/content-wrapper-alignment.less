//==
//== CONTENT WRAPPER ALIGNMENT MIXIN
//==
//== The purpose of this mixin is to provide margins for left and right aligned
//== items. This mixin is to be applied to the main, top level content
//== container. Please be aware, that the margins will turn negative, if the
//== content container gets less wide than the max-width of the content.
//==
.content-wrapper-alignment() {

	// Styles for small screens
	@media (min-width: @screen-sm-min) {
		// All blocks should by default just have this width
		@maxWidth: @content-sm;

		// The default alignment width
		&.alignleft,
		&.alignright {
			max-width: @maxWidth / 2;
		}

		&.alignleft {
			margin-left: calc(~"50% -" (@maxWidth) / 2);
		}

		&.alignright {
			margin-right: calc(~"50% -" (@maxWidth) / 2);
		}
	}

	// Styles for medium screens
	@media (min-width: @screen-md-min) {
		// All blocks should by default just have this width
		@maxWidth: @content-md;

		// The default alignment width
		&.alignleft,
		&.alignright {
			max-width: @maxWidth / 2;
		}

		&.alignleft {
			margin-left: calc(~"50% -" (@maxWidth) / 2);
		}

		&.alignright {
			margin-right: calc(~"50% -" (@maxWidth) / 2);
		}
	}

	// Styles for large screens
	@media (min-width: @screen-lg-min) {
		// All blocks should by default just have this width
		@maxWidth: @content-lg;

		// The default alignment width
		&.alignleft,
		&.alignright {
			max-width: @maxWidth / 2;
		}

		&.alignleft {
			margin-left: calc(~"50% -" (@maxWidth) / 2);
		}
	}

}
